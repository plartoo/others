[
  {
    "__comment__": "Vietnam files has more than 100K rows which is our default data loading limit. So we need to update that.",
    "rows_per_read": 200000,

    "__comment__": "If we pass None for 'sheet_name' parameter in reading Excel files, pandas will read ALL the sheets.",
    "__comment__": "The equivalent of None in JSON file is null. That's why we are providing null below to read all the sheets in the file.",
    "input_sheet_name": 0,
    "header": 1,
    "skiprows": 2,
    "skipfooter": 0,

    "write_output": true,
    "output_folder_path": "./output/APAC_Vietnam/",
    "output_file_name_prefix": "Transformed_Vietnam_20200301_20200531_",

    "custom_transform_functions_file": "./transform_functions/apac_vietnam_transform_functions.py",

    "functions_to_apply": [
      {
        "__function_comment__": "We are expecting to process 'Spots', 'Press' and 'Radio' sheets in this order.",
        "__function_comment__": "If the order of the sheet is different, we must update the order of the sheet",
        "__function_comment__": "we use to load the data in the functions below.",
        "function_name": "assert_the_order_of_sheets_is_as_expected",
        "function_args": [["Spots", "Press", "Radio"]]
      },
      {
        "function_name": "create_new_dataframe_from_given_sheet_names_and_add_media_type_column_using_sheet_name",
        "function_args": [["Spots", "Press", "Radio"]]
      },
      {
        "function_name": "drop_columns_by_name_if_they_exist_in_dataframe",
        "function_args": [["Header type", "Insertions", "Duration [seconds]", "GRP", "Cont(000)"]]
      },
      {
        "__function_comment__": "Excel file has empty columns. We need to drop them first",
        "function_name": "drop_unnamed_columns"
      },
      {
        "__function_comment__": "By the time we run this function, there should be only 9 columns total remaining in the raw data frame.",
        "function_name": "assert_number_of_columns_equals",
        "function_args": [10]
      },
      {
        "__function_comment__": "Delete row with value 'Total' from Date column.",
        "function_name": "drop_rows_with_matching_string_values",
        "function_args": [["Date", "Sector", "Brand"],[["Total"], ["Total"], ["Total"]]]
      },
      {
        "__function_comment__": "Delete row with value '*' from 'Cost in VND' column.",
        "function_name": "drop_rows_with_matching_string_values",
        "function_args": [["Cost in VND"],[["*"]]]
      },
      {
        "__function_comment__": "Add PROCESSED_DATE that holds the current date value.",
        "function_name": "add_PROCESSED_DATE_column_with_current_date"
      },
      {
        "__function_comment__": "Create HARMONIZED_YEAR column from existing date column name.",
        "function_name": "add_HARMONIZED_YEAR_column_using_existing_column_with_year_values",
        "function_args": ["Date"]
      },
      {
        "__function_comment__": "Create HARMONIZED_MONTH column from existing date column name.",
        "function_name": "add_HARMONIZED_MONTH_column_using_existing_column_with_month_values",
        "function_args": ["Date"]
      },
      {
        "__function_comment__": "Add DATE column based on the values in ***YEAR and MONTH columns created in previous steps***.",
        "function_name": "add_HARMONIZED_DATE_column_using_existing_YEAR_and_MONTH_columns_with_integer_values"
      },
      {
        "__function_comment__": "Add HARMONIZED_REGION as a new column with 'Asia Pacific' as value.",
        "function_name": "add_HARMONIZED_REGION_column",
        "function_args": ["Asia Pacific"]
      },
      {
        "__function_comment__": "Create HARMONIZED_COUNTRY column (with standardized country names in comp_harm_constants.py) from raw country name column.",
        "function_name": "add_HARMONIZED_COUNTRY_column_using_fixed_str_value",
        "function_args": ["Vietnam"]
      },
      {
        "__function_comment__": "Create HARMONIZED_ADVERTISER column (with standardized advertiser names in comp_harm_constants.py) from existing raw advertiser name column.",
        "function_name": "add_HARMONIZED_ADVERTISER_column_using_existing_advertiser_column",
        "function_args": ["Advertiser"]
      },
      {
        "__function_comment__": "Create HARMONIZED_MEDIA_TYPE column (with standardized Media Type names in comp_harm_constants.py) from raw media type column.",
        "function_name": "add_HARMONIZED_MEDIA_TYPE_column_using_existing_media_type_column"
      },
      {
        "__function_comment__": "Create HARMONIZED_CATEGORY column (with standardized category names in comp_harm_constants.py) from raw category name column.",
        "function_name": "add_HARMONIZED_CATEGORY_column_using_existing_category_column",
        "function_args": ["Sector"]
      },
      {
        "__function_comment__": "Create RAW_PRODUCT_NAME column from existing product name column.",
        "function_name": "add_RAW_PRODUCT_NAME_column_by_renaming_existing_column",
        "function_args": ["Model"]
      },
      {
        "__function_comment__": "Add CURRENCY as a new column with 'UAH' as value.",
        "function_name": "add_HARMONIZED_CURRENCY_column",
        "function_args": ["VND"]
      },
      {
        "__function_comment__": "Create HARMONIZED_GROSS_SPEND column (with values rounded to 2-decimal places) from raw gross spend column.",
        "function_name": "add_HARMONIZED_GROSS_SPEND_column",
        "function_args": ["Cost in VND"]
      },
      {
        "__function_comment__": "Multiply HARMONIZED_GROSS_SPEND column by 1000 from raw gross spend column.",
        "__function_comment__": "We validate the values for Vietnam and we realized that is necesary to multiply by 1000",
        "__function_comment__": "For Vietnam in March the Local Spend is (1740008 for Spot + 595275 for Press+ 4338828for Radio = $288 USD)",
        "__function_comment__": "So it doesn't make sense and we decided to multiply that with 1000",
        "function_name": "multiply_HARMONIZED_GROSS_SPEND_by_thousand"
      },
      {
        "__function_comment__": "Create RAW_SUBCATEGORY column from existing subcategory column name.",
        "function_name": "add_RAW_SUBCATEGORY_column_by_renaming_existing_column",
        "function_args": ["Product"]
      },
      {
        "__function_comment__": "Create RAW_BRAND column from existing brand column name.",
        "function_name": "add_RAW_BRAND_column_by_renaming_existing_column",
        "function_args": ["Brand"]
      },
      {
        "__function_comment__": "Create RAW_SUBBRAND column with empty values.",
        "function_name": "add_RAW_SUBBRAND_column_with_empty_values"
      },
      {
        "__function_comment__": "Add HARMONIZED_SUBCATEGORY and HARMONIZED_PRODUCT_NAME column and empty/NULL values so that automated mapping process or human mapper can fill it out later.",
        "function_name": "add_empty_HARMONIZED_columns_for_automated_mapping"
      },
      {
        "__function_comment__": "Rearrange the columns to the desired order that we use in Competitive Harmonization.",
        "function_name": "filter_and_rearrange_columns_for_final_output"
      }
    ]
  }
]